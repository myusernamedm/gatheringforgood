// <auto-generated />
using System;
using GatheringForGood.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GatheringForGood.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220517110918_dropFCLTable")]
    partial class dropFCLTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GatheringForGood.Areas.Identity.Data.ArticleDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dislikes")
                        .HasColumnType("int");

                    b.Property<bool>("Featured")
                        .HasColumnType("bit");

                    b.Property<string>("Image1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image10Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image11Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image12Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image13Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image14Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image15Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image16Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image17Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image18Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image19Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image20Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image21")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image21Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image22")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image22Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image23")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image23Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image24")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image24Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image25")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image25Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image26")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image26Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image27")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image27Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image28")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image28Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image29")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image29Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image2Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image30")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image30Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image31")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image31Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image32")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image32Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image33")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image33Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image34")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image34Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image35")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image35Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image36")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image36Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image37")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image37Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image38")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image38Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image39")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image39Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image3Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image40")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image40Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image41")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image41Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image42")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image42Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image43")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image43Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image44")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image44Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image45")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image45Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image46")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image46Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image47")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image47Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image48")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image48Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image49")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image49Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image4Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image50")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image50Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image5Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image6Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image7Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image8Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image9Caption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageTitleCaption")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<string>("Para1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para10Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para11Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para12Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para13Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para14Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para15Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para16Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para17Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para18Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para19Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para20Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para21")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para21Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para22")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para22Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para23")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para23Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para24")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para24Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para25")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para25Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para26")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para26Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para27")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para27Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para28")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para28Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para29")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para29Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para2Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para30")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para30Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para31")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para31Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para32")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para32Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para33")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para33Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para34")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para34Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para35")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para35Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para36")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para36Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para37")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para37Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para38")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para38Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para39")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para39Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para3Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para40")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para40Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para41")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para41Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para42")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para42Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para43")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para43Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para44")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para44Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para45")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para45Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para46")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para46Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para47")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para47Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para48")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para48Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para49")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para49Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para4Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para50")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para50Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para5Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para6Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para7Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para8Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para9")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Para9Subheading")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PostedDateTime")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("Questionable")
                        .HasColumnType("int");

                    b.Property<int>("Shocked")
                        .HasColumnType("int");

                    b.Property<string>("Snippet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Support")
                        .HasColumnType("int");

                    b.Property<bool>("TandC")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleVideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TreePlanted")
                        .HasColumnType("bit");

                    b.Property<string>("UniqueReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video10")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video11")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video12")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video13")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video14")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video15")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video16")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video17")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video18")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video19")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video20")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video21")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video22")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video23")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video24")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video25")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video26")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video27")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video28")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video29")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video30")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video31")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video32")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video33")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video34")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video35")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video36")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video37")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video38")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video39")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video40")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video41")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video42")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video43")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video44")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video45")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video46")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video47")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video48")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video49")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video50")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video7")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video8")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Video9")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ArticleDetails");
                });

            modelBuilder.Entity("GatheringForGood.Areas.Identity.Data.ArticlesList", b =>
                {
                    b.Property<int>("ArticleReference")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArticleViews")
                        .HasColumnType("int");

                    b.Property<string>("AuthorFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dislikes")
                        .HasColumnType("int");

                    b.Property<bool>("Featured")
                        .HasColumnType("bit");

                    b.Property<string>("HREFLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Likes")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PostedDateTime")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("Questionable")
                        .HasColumnType("int");

                    b.Property<string>("RazorLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Shocked")
                        .HasColumnType("int");

                    b.Property<bool>("ShowArticle")
                        .HasColumnType("bit");

                    b.Property<string>("Snippet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Support")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleVideoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TreePlanted")
                        .HasColumnType("bit");

                    b.Property<string>("UniqueReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WeeklyNewsList")
                        .HasColumnType("bit");

                    b.HasKey("ArticleReference");

                    b.ToTable("ArticlesList");
                });

            modelBuilder.Entity("GatheringForGood.Areas.Identity.Data.CountryList", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Number");

                    b.ToTable("CountryList");
                });

            modelBuilder.Entity("GatheringForGood.Areas.Identity.Data.FeaturedCodesList1", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime");

                    b.HasKey("Number");

                    b.ToTable("FeaturedCodesList1");
                });

            modelBuilder.Entity("GatheringForGood.Areas.Identity.Data.InterestsList", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Interest")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Number");

                    b.ToTable("InterestsList");
                });

            modelBuilder.Entity("GatheringForGood.Areas.Identity.Data.OffsetMyCarbonReceipts", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CO2Accomodation")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("CO2Flight")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("CO2Food")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("CO2PublicServices")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("CO2ShoppingLeisure")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("CO2Total")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("CO2Transport")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("ModeOfTransportType")
                        .HasColumnType("int");

                    b.Property<decimal>("PercentageDriving1")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("PercentageDriving2")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("PercentagePublic")
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("PriceAccomodation")
                        .HasColumnType("smallmoney");

                    b.Property<decimal>("PriceFlight")
                        .HasColumnType("smallmoney");

                    b.Property<decimal>("PriceFood")
                        .HasColumnType("smallmoney");

                    b.Property<decimal>("PricePublicServices")
                        .HasColumnType("smallmoney");

                    b.Property<decimal>("PriceShoppingLeisure")
                        .HasColumnType("smallmoney");

                    b.Property<decimal>("PriceTotal")
                        .HasColumnType("smallmoney");

                    b.Property<decimal>("PriceTransport")
                        .HasColumnType("smallmoney");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Number");

                    b.ToTable("OffsetMyCarbonReceipts");
                });

            modelBuilder.Entity("GatheringForGood.Areas.Identity.Data.SkillsList", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Skill")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Number");

                    b.ToTable("SkillsList");
                });

            modelBuilder.Entity("GatheringForGood.Areas.Identity.Data.UserBadges", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BuildingBackBetter")
                        .HasColumnType("int");

                    b.Property<int>("CommunicatingForDifference")
                        .HasColumnType("int");

                    b.Property<int>("ContributorForGood")
                        .HasColumnType("int");

                    b.Property<int>("DefeatAnimalExtinction")
                        .HasColumnType("int");

                    b.Property<int>("DefeatDeforestation")
                        .HasColumnType("int");

                    b.Property<int>("DefeatGlobalWarming")
                        .HasColumnType("int");

                    b.Property<int>("FeedbackHero")
                        .HasColumnType("int");

                    b.Property<int>("FirstStep")
                        .HasColumnType("int");

                    b.Property<int>("GathererForGood")
                        .HasColumnType("int");

                    b.Property<bool>("Helpful")
                        .HasColumnType("bit");

                    b.Property<int>("KeyDriverOfChange")
                        .HasColumnType("int");

                    b.Property<bool>("Leader")
                        .HasColumnType("bit");

                    b.Property<int>("LearningForGood")
                        .HasColumnType("int");

                    b.Property<int>("MakingADifference")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PassionateStartCountDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("PlanetCare")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PlanetCareStartDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Thankyou")
                        .HasColumnType("bit");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Visionary")
                        .HasColumnType("bit");

                    b.HasKey("Number");

                    b.ToTable("UserBadges");
                });

            modelBuilder.Entity("GatheringForGood.Areas.Identity.Data.UserContact", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FeedbackDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TandC")
                        .HasColumnType("bit");

                    b.Property<string>("Thoughts")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Number");

                    b.ToTable("UserContact");
                });

            modelBuilder.Entity("GatheringForGood.Areas.Identity.Data.UserFeedback", b =>
                {
                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DataSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Feedback")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FeedbackDate")
                        .HasColumnType("datetime");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Number");

                    b.ToTable("UserFeedback");
                });

            modelBuilder.Entity("GatheringForGood.Areas.Identity.SiteEnvironmentalActionCounts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AllUserCo2Total")
                        .HasColumnType("float");

                    b.Property<int>("SiteBuyLocal")
                        .HasColumnType("int");

                    b.Property<int>("SiteBuyRecycled")
                        .HasColumnType("int");

                    b.Property<int>("SiteCarpool")
                        .HasColumnType("int");

                    b.Property<int>("SiteCompostBin")
                        .HasColumnType("int");

                    b.Property<int>("SiteCycle")
                        .HasColumnType("int");

                    b.Property<long>("SiteDeforestationClicks")
                        .HasColumnType("bigint");

                    b.Property<long>("SiteDeforestationTotal")
                        .HasColumnType("bigint");

                    b.Property<int>("SiteDonate")
                        .HasColumnType("int");

                    b.Property<int>("SiteDriveElectric")
                        .HasColumnType("int");

                    b.Property<int>("SiteEatOrganic")
                        .HasColumnType("int");

                    b.Property<long>("SiteExtinctionClicks")
                        .HasColumnType("bigint");

                    b.Property<long>("SiteExtinctionTotal")
                        .HasColumnType("bigint");

                    b.Property<int>("SiteFamilySizes")
                        .HasColumnType("int");

                    b.Property<int>("SiteFluorescentBulbs")
                        .HasColumnType("int");

                    b.Property<int>("SiteFlyLess")
                        .HasColumnType("int");

                    b.Property<long>("SiteGlobalWarmingClicks")
                        .HasColumnType("bigint");

                    b.Property<long>("SiteGlobalWarmingTotal")
                        .HasColumnType("bigint");

                    b.Property<int>("SiteGoPaperless")
                        .HasColumnType("int");

                    b.Property<int>("SiteGoVegan")
                        .HasColumnType("int");

                    b.Property<int>("SiteGoVegetarian")
                        .HasColumnType("int");

                    b.Property<int>("SiteGreenRecovery")
                        .HasColumnType("int");

                    b.Property<int>("SiteGrowVeg")
                        .HasColumnType("int");

                    b.Property<int>("SiteHabitatRestoration")
                        .HasColumnType("int");

                    b.Property<int>("SiteHerbsAndPesticides")
                        .HasColumnType("int");

                    b.Property<int>("SiteHomeInsulation")
                        .HasColumnType("int");

                    b.Property<int>("SiteLiveCarFree")
                        .HasColumnType("int");

                    b.Property<int>("SiteMinimisePlastic")
                        .HasColumnType("int");

                    b.Property<int>("SitePlantNative")
                        .HasColumnType("int");

                    b.Property<int>("SitePlantTrees")
                        .HasColumnType("int");

                    b.Property<int>("SitePublicTransport")
                        .HasColumnType("int");

                    b.Property<int>("SiteRecyclingBin")
                        .HasColumnType("int");

                    b.Property<int>("SiteReduceMeat")
                        .HasColumnType("int");

                    b.Property<int>("SiteRenewableEnergy")
                        .HasColumnType("int");

                    b.Property<int>("SiteShorterShowers")
                        .HasColumnType("int");

                    b.Property<int>("SiteSignPetition")
                        .HasColumnType("int");

                    b.Property<int>("SiteSlowDown")
                        .HasColumnType("int");

                    b.Property<int>("SiteSocialMedia")
                        .HasColumnType("int");

                    b.Property<int>("SiteStandUp")
                        .HasColumnType("int");

                    b.Property<long>("SiteTotal")
                        .HasColumnType("bigint");

                    b.Property<int>("SiteTurnOffLights")
                        .HasColumnType("int");

                    b.Property<int>("SiteWildlifeRefuge")
                        .HasColumnType("int");

                    b.Property<int>("SiteZeroDeforestation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SiteEnvironmentalActionCounts");
                });

            modelBuilder.Entity("GatheringForGood.Areas.Identity.UserEnvironmentalActionCounts", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("BuyLocal")
                        .HasColumnType("int");

                    b.Property<int>("BuyRecycled")
                        .HasColumnType("int");

                    b.Property<int>("Carpool")
                        .HasColumnType("int");

                    b.Property<int>("CompostBin")
                        .HasColumnType("int");

                    b.Property<int>("Cycle")
                        .HasColumnType("int");

                    b.Property<int>("Donate")
                        .HasColumnType("int");

                    b.Property<int>("DriveElectric")
                        .HasColumnType("int");

                    b.Property<int>("EatOrganic")
                        .HasColumnType("int");

                    b.Property<int>("FamilySizes")
                        .HasColumnType("int");

                    b.Property<int>("FluorescentBulbs")
                        .HasColumnType("int");

                    b.Property<int>("FlyLess")
                        .HasColumnType("int");

                    b.Property<int>("GoPaperless")
                        .HasColumnType("int");

                    b.Property<int>("GoVegan")
                        .HasColumnType("int");

                    b.Property<int>("GoVegetarian")
                        .HasColumnType("int");

                    b.Property<int>("GreenRecovery")
                        .HasColumnType("int");

                    b.Property<int>("GrowVeg")
                        .HasColumnType("int");

                    b.Property<int>("HabitatRestoration")
                        .HasColumnType("int");

                    b.Property<int>("HerbsAndPesticides")
                        .HasColumnType("int");

                    b.Property<int>("HomeInsulation")
                        .HasColumnType("int");

                    b.Property<int>("LiveCarFree")
                        .HasColumnType("int");

                    b.Property<int>("MinimisePlastic")
                        .HasColumnType("int");

                    b.Property<int>("PlantNative")
                        .HasColumnType("int");

                    b.Property<int>("PlantTrees")
                        .HasColumnType("int");

                    b.Property<int>("PublicTransport")
                        .HasColumnType("int");

                    b.Property<int>("RecyclingBin")
                        .HasColumnType("int");

                    b.Property<int>("ReduceMeat")
                        .HasColumnType("int");

                    b.Property<int>("RenewableEnergy")
                        .HasColumnType("int");

                    b.Property<int>("ShorterShowers")
                        .HasColumnType("int");

                    b.Property<int>("SignPetition")
                        .HasColumnType("int");

                    b.Property<int>("SlowDown")
                        .HasColumnType("int");

                    b.Property<int>("SocialMedia")
                        .HasColumnType("int");

                    b.Property<int>("StandUp")
                        .HasColumnType("int");

                    b.Property<int>("TurnOffLights")
                        .HasColumnType("int");

                    b.Property<double>("UserBuyLocalCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserBuyRecycledCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserCarpoolCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserCompostBinCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserCycleCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserDonateCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserDriveElectricCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserEatOrganicCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserFamilySizesCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserFluorescentBulbsCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserFlyLessCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserGoPaperlessCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserGoVeganCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserGoVegetarianCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserGreenRecoveryCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserGrowVegCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserHabitatRestorationCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserHerbsAndPesticidesCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserHomeInsulationCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserLiveCarFreeCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserMinimisePlasticCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserPlantNativeCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserPlantTreesCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserPublicTransportCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserRecyclingBinCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserReduceMeatCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserRenewableEnergyCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserShorterShowersCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserSignPetitionCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserSlowDownCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserSocialMediaCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserStandUpCO2Total")
                        .HasColumnType("float");

                    b.Property<int>("UserTotal")
                        .HasColumnType("int");

                    b.Property<double>("UserTurnOffLightsCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserWildlifeRefugeCO2Total")
                        .HasColumnType("float");

                    b.Property<double>("UserZeroDeforestationCO2Total")
                        .HasColumnType("float");

                    b.Property<int>("WildlifeRefuge")
                        .HasColumnType("int");

                    b.Property<int>("ZeroDeforestation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserEnvironmentalActionCounts");
                });

            modelBuilder.Entity("GatheringForGood.Data.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("AreaOfInterest")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("AreasYouCanHelp")
                        .HasColumnType("bit");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("FeatureUpdates")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("MarketingComms")
                        .HasColumnType("bit");

                    b.Property<bool>("NewArticlePosts")
                        .HasColumnType("bit");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("ProductNews")
                        .HasColumnType("bit");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("SignedUp")
                        .HasColumnType("datetime");

                    b.Property<string>("Skill")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TandC")
                        .HasColumnType("bit");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("GatheringForGood.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("GatheringForGood.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GatheringForGood.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("GatheringForGood.Data.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
